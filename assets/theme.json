{
	"json_version": 0.2,
	"data": {
		"name": "Example",
		"author": "Your Name Here",
		"css": "Your code here. I recommend placing a URL here as opposed to raw code, as placing code into JSON requires a lot of escape characters and pain.\n\n.textarea::before { content: \"\"; }",
		"type": "modern",
		"help": "https://example.com",
		"supports": ["animelist"],
		"columns": {
			"mode": "whitelist",
			"animelist": {
				"Score": true,
				"Episodes": true,
				"Genre": null,
				"Tags": null,
				"Image": true
			}
		},
		"options": {
			"text": {
				"name": "Example text input.",
				"description": "Options can have descriptions. You can do some [b]light BBCode[/b], including lists and [url=https://example.com]URLs[/url]!",
				"type": "text",
				"replacements": [["I will be found!", "I will replace it."]],
				"default": ""
			},
			"textarea": {
				"name": "Example textarea input.",
				"description": "Some fields have validation. This field has a subtype of \"content\" and therefore will be formatted to work correctly with CSS content values.",
				"type": "textarea/content",
				"replacements": [[".textarea::before { content: \"\"; }", ".selector::before { content: {{{insert}}}; }"]]
			},
			"toggle": {
				"name": "Example toggle.",
				"description": "Options can be toggles too! These require three replacement options: find, replace when disabled, and replace when enabled.",
				"type": "toggle",
				"replacements": [["--avatar:none;", "--avatar:{{{insert}}};"]],
				"default": false
			},
			"value": {
				"name": "Example CSS opacity value.",
				"description": "If you want to provide your users with a bit more context, you can set a text field to a specific CSS value.",
				"type": "text/value/opacity",
				"replacements": [["find", "{{{insert}}}"]],
				"default": "0.8"
			},
			"size": {
				"name": "Example size.",
				"description": "The \"size\" subtype is good for validating CSS length/width/etc units.",
				"type": "text/size",
				"replacements": [["find", "{{{insert}}}"]]
			},
			"color": {
				"name": "Example color value.",
				"description": "You should label colour values with the \"color\" type, as it has a preview of the colour on the right and runs a validation check to see if it's valid.",
				"type": "color",
				"replacements": [["find", "{{{insert}}}"]]
			}
		},
		"mods": {
			"mod": {
				"name": "Example mod",
				"description": "Mods can have descriptions too! Enable a mod to expand the options section.",
				"css": {"bottom": ".selector { property: value; }"},
				"requires": ["hidden"],
				"conflicts": ["mod2"],
				"options": {
					"select": {
						"name": "Example dropdown.",
						"type": "select",
						"selections": {
							"opt1": {
								"label": "Option 1",
								"replacements": [["to find",".selector { property: value; }"]]
							},
							"opt2": {
								"label": "Option 2",
								"replacements": [["to find", ".selector { property: value; }"]]
							}
						}
					}
				}
			},
			"mod2": {
				"name": "Example conflict mod",
				"css": {
					"import": "@\\import \"https://example.com/import.css\";",
					"bottom": ".selector { property: value; }"
				},
				"conflicts": ["mod"]
			},
			"informational": {
				"name": "Example informational/external mod",
				"description": "You can link to external references and guides using the \"url\" key and removing the \"css\" key.",
				"url": "https://example.com",
				"tags": ["Mods can have tags!", "guide"]
			},
			"hidden": {
				"name": "Example hidden.",
				"description": "You can hide mods with the \"hidden\" flag. This can be useful especially for requirements that don't do anything on their own.",
				"css": {
					"import": "@\\import \"https://example.com/import.css\";",
					"bottom": ".selector { property: value; }"
				},
				"flags": ["hidden"]
			}
		}
	}
}